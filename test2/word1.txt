1. Cerința:
	*	Trebuie sa gasim o modalitate de asezare a delegatilor fiecarui oras.
	*	Date de intrare: matricea-conflict, patratica, cu valori de 1 si 0 care este simetrica fata de diagonala principala
	*	Problema presupune găsirea unei ordini de asezare la o mas rotunda, astfel incat sa nu avem conflicte (sau cat mi putine intre un delegat si vecinii sai la masa)
	*	Problema este cu dependență de adiacență
2. Reprezentarea solutiilor:
	* Un candidate la solutie este o permutare de n , unde n = nr de delagia
	* problema este fara constrangeri
	* dimensiunea spatiilor solutiilor :n!
3. Functia fintess/calitatea unui individ
	* Calitatea individului va fi determinata in functie de numarul de conflicte pe care il determina, fiind urmarita minimizarea acestui numar  nr_conflicte(x) = mat_conflicte[x[i]][x[i+1]]
	* Cum aceasta este o functie ce trebuie minimizata, functia fitness a individului va fi: 1/(1+nr_conflicte(x))
4. Populatia intiala:
	* Vom folosi modelul generational: generam dim indivizi si selectam tot dim parinti
	* Populatia va avea dimensiune constanta in timp
	* Populatia initiala se genereaza ca matrice de permutari de n aleatoare
5. Operatorii de variatie:
	A. RECOMBINARE
		* Folosim schema generala de recombinare pentru probleme fara restrictii, cu prop de recombinare pc= 0.8
		* Reprezentarea prin permutari cu dependenta de adiacenta, deci folosim PMX(Partially Mapped Crossover)
		* Modelul generational: se ia in calcul si recombinarea asexuata
	B. MUTATIE
		* Folosim schema generala de mutatie pentru probleme fara constrangeri cu prob de mutatie PM = 0.2
		* dependenta de adiacenta => folosim mutatia prin inversiune
6.	Selectia parintilor si a generatiei urmatoare
	*	Selectia parintilor: pentru ca folosim modelul generational, vom selecta dim parinti 
	*	Cum functia fitness ia valori strict pozitive, vom folosi mecanimsul SUS cu distributie de probabilitate FPS cu sigma-scalare
	*	Selectia generației următoare: model generațional => elitism

7.	Condiția de terminare & soluția
	*	Algoritmul se finalizează dacă:
	*	S-au realizat NMAX iterații SAU
	*	Variabilitatea populației este 0 (toți indivizii au aceeași calitate) SAU
	*	A fost generat un individ cu fitness maxim =1
	*	Soluția problemei va fi dată de individul cu cea mai bună calitate din ultima generație.
